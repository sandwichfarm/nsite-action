name: CI Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: read # Needed to checkout the code

jobs:
  test-nsyte:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # Test on common OSes. Add more if nsyte supports them and has releases.
        os: [ubuntu-latest, macos-latest, windows-latest]
        # Test default version and latest
        nsyte_version: ['', 'latest']

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup dummy directory and secret
        shell: bash
        run: |
          mkdir test-dist
          echo "<html>Test index.html</html>" > test-dist/index.html
          echo "<html>Test fallback.html</html>" > test-dist/fallback.html 
          echo "DUMMY_NBUNKSEC=nbunksec1fakebunkersecretstringforactiontestingpurposesonly" >> $GITHUB_ENV

      - name: Run nsite-action with nsyte (Local Path)
        uses: ./ 
        id: test_run
        env:
          GH_TOKEN: ${{ github.token }}
        with:
          tool: nsyte  # Explicitly test nsyte
          nbunksec: ${{ env.DUMMY_NBUNKSEC }}
          directory: './test-dist'
          version: ${{ matrix.nsyte_version }}
          relays: |
            wss://nostr.example.com
            wss://relay.example.org
          servers: |
            wss://blossom.example.com
          force: true
          purge: false
          verbose: true
          fallback: '/fallback.html'
          concurrency: 2
        continue-on-error: true # Expect failure with dummy nbunksec/relays/servers

      - name: Verify nsyte Action Outputs
        shell: bash
        run: |
          echo "Action outputs from test_run step:"
          echo "  Status: ${{ steps.test_run.outputs.status }}"
          echo "  Tool Used: ${{ steps.test_run.outputs.tool_used }}"
          echo "  Tool Version Used: ${{ steps.test_run.outputs.tool_version_used }}"
          echo "  nsyte Version Used (deprecated): ${{ steps.test_run.outputs.nsyte_version_used }}"
          
          # Verify tool_used output
          if [[ "${{ steps.test_run.outputs.tool_used }}" != "nsyte" ]]; then
            echo "::error::Expected tool_used to be 'nsyte', but got '${{ steps.test_run.outputs.tool_used }}'."
            exit 1
          fi
          
          # Verify version outputs
          if [[ -z "${{ steps.test_run.outputs.tool_version_used }}" ]]; then
            echo "::error::Output 'tool_version_used' was NOT set."
            exit 1
          fi

          # Check status
          if [[ "${{ steps.test_run.outputs.status }}" != "failure" ]]; then
            echo "::error::Expected status 'failure' due to dummy inputs, but got '${{ steps.test_run.outputs.status }}'."
            exit 1
          fi
          
          echo "Verification passed: All outputs are correctly populated."

  test-npx-tools:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        tool: [nsite-cli, nous-cli, nostr-deploy-cli]
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup dummy directory and secret
        shell: bash
        run: |
          mkdir test-dist
          echo "<html>Test index.html</html>" > test-dist/index.html
          echo "DUMMY_PRIVATE_KEY=nsec1fakeprivatekeyfortestingpurposesonly123456789" >> $GITHUB_ENV

      - name: Run nsite-action with ${{ matrix.tool }}
        uses: ./
        id: test_run
        with:
          tool: ${{ matrix.tool }}
          private_key: ${{ env.DUMMY_PRIVATE_KEY }}
          directory: './test-dist'
          relays: |
            wss://nostr.example.com
            wss://relay.example.org
          servers: |
            wss://blossom.example.com
          verbose: true
        continue-on-error: true # Expect failure with dummy credentials

      - name: Verify ${{ matrix.tool }} Action Outputs
        shell: bash
        run: |
          echo "Action outputs for ${{ matrix.tool }}:"
          echo "  Status: ${{ steps.test_run.outputs.status }}"
          echo "  Tool Used: ${{ steps.test_run.outputs.tool_used }}"
          echo "  Tool Version Used: ${{ steps.test_run.outputs.tool_version_used }}"
          
          # Verify tool_used output
          if [[ "${{ steps.test_run.outputs.tool_used }}" != "${{ matrix.tool }}" ]]; then
            echo "::error::Expected tool_used to be '${{ matrix.tool }}', but got '${{ steps.test_run.outputs.tool_used }}'."
            exit 1
          fi
          
          # Verify pinned versions for NPX tools
          case "${{ matrix.tool }}" in
            "nsite-cli")
              expected_version="0.1.16"
              ;;
            "nous-cli")
              expected_version="0.1.3"
              ;;
            "nostr-deploy-cli")
              expected_version="0.7.6"
              ;;
          esac
          
          if [[ "${{ steps.test_run.outputs.tool_version_used }}" != "$expected_version" ]]; then
            echo "::error::Expected tool_version_used to be '$expected_version' for ${{ matrix.tool }}, but got '${{ steps.test_run.outputs.tool_version_used }}'."
            exit 1
          fi

          # Check status
          if [[ "${{ steps.test_run.outputs.status }}" != "failure" ]]; then
            echo "::error::Expected status 'failure' due to dummy inputs, but got '${{ steps.test_run.outputs.status }}'."
            exit 1
          fi
          
          echo "Verification passed for ${{ matrix.tool }}."

  test-backward-compatibility:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup dummy directory and secret
        shell: bash
        run: |
          mkdir test-dist
          echo "<html>Test index.html</html>" > test-dist/index.html
          echo "DUMMY_NBUNKSEC=nbunksec1fakebunkersecretstringforactiontestingpurposesonly" >> $GITHUB_ENV

      - name: Run nsite-action without tool parameter (should default to nsyte)
        uses: ./
        id: test_default
        env:
          GH_TOKEN: ${{ github.token }}
        with:
          nbunksec: ${{ env.DUMMY_NBUNKSEC }}
          directory: './test-dist'
          relays: |
            wss://nostr.example.com
          servers: |
            wss://blossom.example.com
        continue-on-error: true

      - name: Verify backward compatibility
        shell: bash
        run: |
          echo "Testing backward compatibility (no tool parameter):"
          echo "  Tool Used: ${{ steps.test_default.outputs.tool_used }}"
          
          if [[ "${{ steps.test_default.outputs.tool_used }}" != "nsyte" ]]; then
            echo "::error::Expected default tool to be 'nsyte', but got '${{ steps.test_default.outputs.tool_used }}'."
            exit 1
          fi
          
          echo "Backward compatibility verified: defaults to nsyte." 